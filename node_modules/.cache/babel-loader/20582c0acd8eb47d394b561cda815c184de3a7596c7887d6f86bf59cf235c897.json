{"ast":null,"code":"var _jsxFileName = \"/Users/pratikshagupta/Desktop/React/newtextutils/src/components/TextForm.js\",\n  _s = $RefreshSig$();\n/*\nReact hook-- Hooks helps in using features of class without making class\ninitially we set the state by using this.state in class but in function we set the state using react hooks\n*/\n\n//concept of array destructuring is usesd\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    console.log(\"Uppercase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('Enter text here');\n\n  // text=\"new text\"; // wrong way to set the state\n  // setText('new text');\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            value: text,\n            onChange: handleOnChange,\n            id: \"myBox\",\n            rows: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleUpClick,\n          children: \"Convert to Uppercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Text Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [text.split(\" \").length, \" words and \", text.length, \" characters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [0.08 * text.split(\" \").length, \" Minutes read\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"8ociedyOnULrjNDT23y9jPbBd3A=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","console","log","text","newText","toUpperCase","setText","handleOnChange","event","target","value","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","split","length","_c","$RefreshReg$"],"sources":["/Users/pratikshagupta/Desktop/React/newtextutils/src/components/TextForm.js"],"sourcesContent":["/*\nReact hook-- Hooks helps in using features of class without making class\ninitially we set the state by using this.state in class but in function we set the state using react hooks\n*/ \n\n//concept of array destructuring is usesd\nimport React,{useState} from \"react\"\n\n\nexport default function TextForm(props) {\n\n    const handleUpClick =()=>{\n        console.log(\"Uppercase was clicked\" + text);\n        let newText= text.toUpperCase();\n        setText(newText);\n\n    }\n\n    const handleOnChange =(event)=>{\n        \n        setText(event.target.value);\n\n        \n    }\n    const [text,setText] = useState('Enter text here');\n\n    // text=\"new text\"; // wrong way to set the state\n    // setText('new text');\n\n  return (\n    <>\n    <div className=\"box\">\n    <div className=\"container\">\n      <h1>{props.heading}</h1>\n      <div className=\"mb-3\">\n        <textarea className=\"form-control\" value ={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\n      </div>\n      <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</button>\n\n    </div>\n    <div className=\"container my-3\">\n        <h1>Your Text Summary</h1>\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\n        <p>{0.08 * text.split(\" \").length} Minutes read</p>\n        <h2>Preview</h2>\n        <p>{text}</p>\n\n    </div>\n    </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}